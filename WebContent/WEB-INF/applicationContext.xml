<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    	http://www.springframework.org/schema/context 
    	http://www.springframework.org/schema/context/spring-context-3.0.xsd
    	http://www.springframework.org/schema/aop 
    	http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
    	http://www.springframework.org/schema/jee 
    	http://www.springframework.org/schema/jee/spring-jee-2.5.xsd
    	http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
    	http://www.springframework.org/schema/util 
    	http://www.springframework.org/schema/util/spring-util-2.5.xsd">
         
    <!--  Scan for both Jersey Rest Annotations a -->
	<context:component-scan	base-package="com.linearrsa.rest,com.linearrsa.bo,com.linearrsa.dao" />
	<context:annotation-config />

	<aop:config>
		<aop:pointcut id="transactionPointCut" expression="execution(* com.linearrsa.bo.*.*(..))" />
		<aop:advisor advice-ref="transactionAdvice" pointcut-ref="transactionPointCut" />
	</aop:config>
	
	<tx:advice id="transactionAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="retrieve*" read-only="true" />
			<tx:method name="find*" read-only="true" />
			<tx:method name="get*" read-only="true" />
			<tx:method name="search*" read-only="true" />
			<tx:method name="validate*" read-only="true" />
			<tx:method name="check*" read-only="true" />
			<tx:method name="*" propagation="REQUIRED" rollback-for="com.linearrsa.common.ChurnyException" />
			<tx:method name="*" propagation="REQUIRED" rollback-for="com.linearrsa.common.ConstraintFailureException" />
		</tx:attributes>
	</tx:advice>
	
	<!-- transaction support -->
	<tx:annotation-driven transaction-manager="transactionManager" />
	
	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource"
		p:driverClassName="${jdbc.driver}" p:url="${jdbc.url}" p:username="${jdbc.username}"
		p:password="${jdbc.password}" />
	<!-- 
    Injected properties
    -->
	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:crud.properties</value>
			</list>
		</property>
	</bean>

	<bean id="entityManagerFactory"	class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
		p:dataSource-ref="dataSource" p:jpaVendorAdapter-ref="jpaAdapter">
		<property name="loadTimeWeaver">
			<bean class="org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver" />
		</property>
		<property name="jpaProperties">
			<value>
				<!--
					hibernate.ejb.naming_strategy=org.hibernate.cfg.ImprovedNamingStrategy
				-->
				hibernate.ejb.naming_strategy=org.hibernate.cfg.DefaultNamingStrategy
				hibernate.dialect=${hibernate.dialect}
<!-- 				hibernate.hbm2ddl.auto=${hibernate.hbm2ddl.auto} -->
<!--
					hibernate.cache.provider_class=net.sf.ehcache.hibernate.SingletonEhCacheProvider
					hibernate.cache.use_query_cache=true
					hibernate.cache.use_second_level_cache=true
					hibernate.cache.provider_configuration_file_resource_path=ehcache.xml
				-->
			</value>
		</property>
	</bean>
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager"	p:entityManagerFactory-ref="entityManagerFactory" />
	<bean id="jpaAdapter" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" p:database="MYSQL" />
</beans>
